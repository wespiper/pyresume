[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "leverparser"
version = "0.1.0"
description = "A fast, standalone Python library for parsing resumes with high accuracy and zero external dependencies"
readme = "README.md"
license = "MIT"
authors = [
    {name = "PyResume Team", email = "contact@pyresume.dev"}
]
maintainers = [
    {name = "PyResume Team", email = "contact@pyresume.dev"}
]
keywords = ["resume", "parser", "cv", "parsing", "pdf", "docx", "text", "extraction", "nlp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Topic :: Office/Business",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "pdfplumber>=0.10.0",
    "python-docx>=1.0.0",
    "python-dateutil>=2.8.0",
    "phonenumbers>=8.13.0",
    "chardet>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/pyresume/pyresume"
Documentation = "https://pyresume.readthedocs.io/"
Repository = "https://github.com/wespiper/leverparser"
"Bug Reports" = "https://github.com/pyresume/pyresume/issues"
Changelog = "https://github.com/pyresume/pyresume/blob/main/CHANGELOG.md"

[project.optional-dependencies]
ocr = [
    "pytesseract>=0.3.10",
    "Pillow>=9.0.0",
]
ml = [
    "spacy>=3.5.0",
    "scikit-learn>=1.2.0",
    "numpy>=1.21.0",
]
anthropic = [
    "anthropic>=0.18.0",
]
openai = [
    "openai>=1.0.0",
]
llm = [
    "anthropic>=0.18.0",
    "openai>=1.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
]
all = [
    # OCR dependencies
    "pytesseract>=0.3.10",
    "Pillow>=9.0.0",
    # ML dependencies  
    "spacy>=3.5.0",
    "scikit-learn>=1.2.0",
    "numpy>=1.21.0",
    # LLM dependencies
    "anthropic>=0.18.0",
    "openai>=1.0.0",
]

[tool.setuptools]
packages = {find = {exclude = ["tests*", "examples*", "docs*", "venv*", ".*"]}}
include-package-data = true

[tool.setuptools.package-data]
pyresume = ["data/*.json"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["pyresume"]
omit = [
    "tests/*",
    "examples/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]